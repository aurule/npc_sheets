%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: NWoD Character Sheet
file_extensions:
  - nwod
scope: text.plain.nwod
variables:
  universal_tag_names: "type | faketype | name | realname | group | rank | appearance |
                        title | foreign | wanderer | dead"
  changeling_tag_names: "court | motley | mask | mien | entitlement | freehold"
  changeling_tag_extras: "seeming | kith"
  all_tag_names: "{{universal_tag_names}} |
                  {{changeling_tag_names}} | {{changeling_tag_extras}}"
  start_indented_section: ^(?!(\s+|\s*$))
  end_indented_section: ^(?!(\1\s+|\s*$))
contexts:
  main:
    - include: changeling-tags
    - include: general-tags
    - match: ^--(Stats)--$
      comment: Special --Stats-- section
      captures:
        1: markup.heading.section.nwod
      push:
        - meta_scope: meta.section.stats.nwod
        - match: (?=^--)
          pop: true
        - include: derived
        - include: weapons
        - include: merits
        - include: contracts
        - include: echoes
        - include: pledges
        - match: '^(\w[\w ]+)$'
          comment: Generic subsections with skills
          captures:
            1: storage.type.nwod
          push:
            - meta_scope: meta.subsection.nwod
            - match: '{{start_indented_section}}'
              pop: true
            - include: skills
    - match: ^--(.+)--$
      comment: Sections like --Notes-- and --Appearance--
      scope: meta.section.nwod
      captures:
        1: markup.heading.section.nwod
    - include: scope:text.html.markdown
  changeling-tags:
    - match: |-
        ^(@(?ix) \b(?: {{changeling_tag_names}} )\b)
      comment: Simple tags
      captures:
        1: entity.name.tag.nwod
    - match: ^(@changeling)\s*
      comment: Compound changeling tag
      captures:
        1: entity.name.tag.changeling.nwod
      push:
        - meta_scope: meta.tag.changeling.nwod
        - meta_content_scope: meta.variable.tag.changeling.nwod
        - match: \n
          pop: true
        - match: (?<=changeling\s)
          comment: Seeming field
          push:
            - meta_scope: meta.tag.seeming.nwod
            - match: (?=\s)|$
              pop: true
            - include: seemings
        - match: \s+
          comment: Kith field
          push:
            - meta_scope: meta.tag.kith.nwod
            - match: $
              pop: true
            - include: kiths
    - match: ^(@seeming)\s*
      comment: Seeming tag
      captures:
        1: entity.name.tag.seeming.nwod
      push:
        - meta_scope: meta.tag.seeming.nwod
        - meta_content_scope: meta.variable.tag.seeming.nwod
        - match: \n
          pop: true
        - include: seemings
    - match: ^(@kith)\s*
      comment: Kith tag
      captures:
        1: entity.name.tag.kith.nwod
      push:
        - meta_scope: meta.tag.kith.nwod
        - meta_content_scope: meta.variable.tag.kith.nwod
        - match: \n
          pop: true
        - include: kiths
  contracts:
    - match: ^(?i)(contracts)$
      comment: Contracts subsection
      captures:
        1: storage.type.nwod
      push:
        - meta_scope: meta.subsection.contracts.nwod
        - match: '{{start_indented_section}}'
          pop: true
        - match: ^(\s+)(?=\w)
          comment: Contracts
          push:
            - meta_scope: meta.contract.nwod
            - match: '{{end_indented_section}}'
              pop: true
            - match: '^\s+([•\d]+)\s'
              comment: Tier details
              captures:
                1: constant.numeric.nwod
              push:
                - meta_scope: meta.contract.tier.nwod
                - match: $
                  pop: true
                - include: rollmod
            - match: ^\s+
              comment: Notes about usage, etc.
              push:
                - meta_scope: comment.block.documentation.contract.nwod
                - match: $
                  pop: true
            - match: '\(([\w\d\-/;, ]+)\)'
              comment: Refinement
              captures:
                1: string.unquoted.contract.refine.nwod
            - match: '[•\d]+'
              comment: Rating
              scope: constant.numeric.nwod
            - match: \S
              comment: Name
              scope: support.class.contract.nwod
  derived:
    - match: ^(?i)(derived|advantages)$
      comment: Derived attributes subsection
      captures:
        1: storage.type.nwod
      push:
        - meta_scope: meta.subsection.derived.nwod
        - match: '{{start_indented_section}}'
          pop: true
        - match: (?i)\s+(armor)
          comment: Armor stat
          captures:
            1: variable.other.armor.nwod
          push:
            - meta_scope: meta.variable.derived.armor.nwod
            - match: $
              pop: true
            - match: (\d+)(?:(/)(\d+)(b)?)?
              comment: Armor rating
              captures:
                1: constant.numeric.armor.nwod
                2: keyword.operator.nwod
                3: constant.numeric.armor.nwod
                4: support.constant.bulletproof.nwod
            - include: parenComment
        - include: virtues
        - include: vices
        - match: (?i)\s+(seeming)
          comment: Seeming stat
          captures:
            1: variable.other.seeming.nwod
          push:
            - meta_scope: meta.variable.derived.seeming.nwod
            - match: \n
              pop: true
            - include: seemings
            - include: parenComment
        - match: (?i)\s+(kith)
          comment: Kith stat
          captures:
            1: variable.other.kith.nwod
          push:
            - meta_scope: meta.variable.derived.kith.nwod
            - match: $
              pop: true
            - include: kiths
            - include: parenComment
        - match: '\s+(\w+(?: \w+)*)\s+(?:([•\d]+)|(\w+))'
          comment: Generic derived stat
          captures:
            1: variable.other.nwod
            2: constant.numeric.nwod
            3: constant.character.nwod
          push:
            - meta_scope: meta.variable.derived.nwod
            - match: $
              pop: true
            - include: parenComment
  echoes:
    - match: ^(?i)(echoes)$
      comment: Echoes subsection
      captures:
        1: storage.type.nwod
      push:
        - meta_scope: meta.subsection.echoes.nwod
        - match: '{{start_indented_section}}'
          pop: true
        - match: ^(\s+)(?=\w)
          comment: Echoes
          push:
            - meta_scope: meta.echo.nwod
            - match: '{{end_indented_section}}'
              pop: true
            - match: ^\s+
              comment: Notes about usage, etc.
              push:
                - meta_scope: comment.block.documentation.echo.nwod
                - match: $
                  pop: true
            - match: \w\S+
              comment: Name
              scope: support.class.echo.nwod
            - include: parenComment
  general-tags:
    - match: ^(?=@)
      comment: Tags
      push:
        - meta_scope: meta.tag.nwod
        - match: $
          pop: true
        - match: |-
            ^(@(?ix) \b(?: {{universal_tag_names}} )\b)
          comment: Generic tags
          captures:
            1: entity.name.tag.nwod
        - match: |-
            ^@(?ix) \b(
              skip | hidegroup | hideranks
            )\b
          comment: Main directives
          scope: support.function.directive.nwod
        - match: (@hide)
          comment: Hide directive
          captures:
            1: support.function.directive.hide.nwod
          push:
            - match: $
              pop: true
            - match: |-
                (?ix) \b(?: {{all_tag_names}} \b)
              comment: Tag names
              scope: entity.name.tag.nwod
            - match: \w+
              comment: Unrecognized
              scope: string.unquoted.nwod
        - match: ^@#.*$
          comment: Comment tag
          scope: comment.line.nwod
        - match: ^@\w+
          comment: Unrecognized tags
          scope: string.unquoted.nwod
  kiths:
    - match: |-
        (?ix) \b(
          Broadback | Hunterheart | Runnerswift | Skitterskulk |
          Steepscrambler | Swimmerskin | Venombite | Windwing | Cleareyes |
          Coldscale | Roteater | Truefriend | Chimera | Coyote | Nix |
          Riddleseeker |
          Antiquarian | Gravewight | Leechfinger | Mirrorskin | Tunnelgrub |
          Lurkglider | Moonborn | Nightsinger | Palewraith | Razorhand |
          Whisperwisp | Illes | Pishacha | Skogsra |
          Airtouched | Earthbones | Fireheart | Manikin | Snowskin | Waterborn |
          Woodblood | Blightbent | Levinquick | Metalflesh | Sandharrowed |
          Apsaras | Ask-wee-da-eed | Di-cang |
          Bright\ One | Dancer | Draconic | Flowering | Muse | Flamesiren |
          Polychromatic | Shadowsoul | Telluric | Treasured | Gandharva |
          Succubus | Weisse Frau | Minstrel | Romancer | Larcenist | Playmate |
          Cyclopean | Farwalker | Gargantuan | Gristlegrinder | Stonebones |
          Waterdweller | Bloodbrute | Corpsegrinder | Render | Witchtooth |
          Daitya | Oni | Troll |
          Artist | Brewer | Chatelaine | Chirurgeon | Oracle | Smith | Soldier |
          Woodwalker | Author | Drudge | Gameplayer | Miner | Gremlin |
          Pamarindo | Thusser | Fatemaker
        )\b
      comment: Kith keyword
      scope: support.constant.kith.nwod
  merits:
    - match: ^(?i)(merits)$
      comment: Merits subsection
      captures:
        1: storage.type.nwod
      push:
        - meta_scope: meta.subsection.merits.nwod
        - match: '{{start_indented_section}}'
          pop: true
        - match: ^(\s+)(?=\w)
          comment: Merits
          push:
            - meta_scope: meta.merit.nwod
            - match: '{{end_indented_section}}'
              pop: true
            - match: '^\s+([•\d]+)'
              comment: Tier details
              captures:
                1: constant.numeric.nwod
              push:
                - meta_scope: meta.merit.tier.nwod
                - match: $
                  pop: true
                - include: rollmod
            - match: ^\s+
              comment: Notes about usage, etc.
              push:
                - meta_scope: comment.block.documentation.merit.nwod
                - match: $
                  pop: true
            - match: '\(([\w\d\-/;, ]+)\)'
              comment: Refinement
              captures:
                1: string.unquoted.merit.refine.nwod
            - match: '[•\d]+'
              comment: Rating
              scope: constant.numeric.nwod
            - match: (\+)\s*(\d+)
              comment: Magical bonuses like `+ 2` and `+3`
              captures:
                1: keyword.operator.arithmetic.nwod
                2: constant.numeric.nwod
            - match: \S
              comment: Name
              scope: entity.other.inherited-class.merit.nwod
  parenComment:
    - match: \(
      comment: Comments
      push:
        - meta_scope: comment.line.parenthesis.nwod
        - match: \)
          pop: true
        - include: parenComment
  pledges:
    - match: ^(?i)(pledges)$
      comment: Pledges subsection
      captures:
        1: storage.type.nwod
      push:
        - meta_scope: meta.subsection.pledges.nwod
        - match: '{{start_indented_section}}'
          pop: true
        - match: ^(\s+)(\w.*)$
          comment: Pledges
          captures:
            2: entity.name.class.pledge.nwod
          push:
            - meta_scope: meta.pledge.nwod
            - match: '{{end_indented_section}}'
              pop: true
  rangeAtkPools:
    - match: (?=\-|\d|s)
      comment: Ranged attack listings like 10/8/6
      push:
        - meta_scope: meta.variable.rangeatkpools.nwod
        - match: '(?=[^/\dsml\-])'
          pop: true
        - match: \d
          comment: Ranged attack
          scope: constant.numeric.rangeatk.nwod
        - match: "-"
          comment: Negative
          scope: keyword.operator.nwod
        - include: rangePlaceholder
  rangePlaceholder:
    - match: "[sml]"
      comment: Range placeholder
      scope: support.constant.character.range.nwod
  rangeValues:
    - match: (?=\d|s)
      comment: Range increment bounds like 20/40/80
      push:
        - meta_scope: meta.variable.rangevalues.nwod
        - match: '(?=[^/\dsml])'
          pop: true
        - match: \d
          comment: Range number
          scope: constant.numeric.range.nwod
        - include: rangePlaceholder
  rollmod:
    - match: '\['
      comment: "Roll modifiers like `[8-again]`"
      push:
        - meta_scope: meta.roll.parameters.nwod
        - match: '\]'
          pop: true
        - match: |-
            (?ix) \b(
              10-again | 9-again | 8-again | rote
            )\b
          comment: Standard modifiers
          scope: variable.parameter.function.language.nwod
        - match: '[\+\-/*]'
          comment: operators
          scope: keyword.operator.nwod
        - match: '[\w\d+_\-\/]*'
          comment: Other modifiers
          scope: variable.parameter.function.nwod
        - match: '[,\s]'
          comment: Mod separator
          scope: punctuation.separator.parameters.nwod
  seemings:
    - match: |-
        (?ix) \b(
          Beast | Darkling | Elemental | Fairest | Ogre | Wizened
        )\b
      comment: Seeming keyword
      scope: support.constant.seeming.nwod
  sizeValues:
    - match: '(\d+)(?:(/)([psjlnPSJLN]))?'
      comment: Size listings like 1/S and 2/J
      scope: meta.variable.size.nwod
      captures:
        1: constant.numeric.size.nwod
        2: keyword.operator.nwod
        3: support.constant.character.concealment.nwod
  skills:
    - match: '\s+(\w+(?: [\w\(\)\d]+)*)\s+([•\d]+)'
      comment: Skills and skill-like lines (attributes, power names, etc.)
      captures:
        1: variable.other.nwod
        2: constant.numeric.nwod
      push:
        - meta_scope: meta.variable.nwod
        - match: $
          pop: true
        - match: (\+)\s*(\d+)
          comment: Magical bonuses like `+ 2` and `+3`
          scope: meta.variable.nwod
          captures:
            1: keyword.operator.arithmetic.nwod
            2: constant.numeric.nwod
        - match: (\()
          comment: Skill specialties like `(crime scenes)`
          captures:
            1: punctuation.definition.parameters.specialty.begin.nwod
          push:
            - meta_scope: meta.skill.specialty.nwod
            - match: (\))
              captures:
                1: punctuation.definition.parameters.specialty.end.nwod
              pop: true
            - match: '([\s\w]+)(,)?'
              comment: Individual skill specialties are a comma-separated list
              captures:
                1: entity.other.attribute-name.specialty.nwod
                2: punctuation.separator.sequence.specialty.nwod
        - include: rollmod
  vices:
    - match: (?i)\s+(vice)
      comment: Vice stat
      captures:
        1: variable.other.vice.nwod
      push:
        - meta_scope: meta.variable.derived.vice.nwod
        - match: $
          pop: true
        - match: |-
            (?ix) \b(
              Envy | Gluttony | Greed | Lust | Pride | Sloth | Wrath
            )\b
          comment: Vice keyword
          scope: support.constant.vice.nwod
  virtues:
    - match: (?i)\s+(virtue)
      comment: Virtue stat
      captures:
        1: variable.other.virtue.nwod
      push:
        - meta_scope: meta.variable.derived.virtue.nwod
        - match: $
          pop: true
        - match: |-
            (?ix) \b(
              Charity | Faith | Fortitude | Hope | Justice | Prudence | Temperance
            )\b
          comment: Virtue keyword
          scope: support.constant.virtue.nwod
  weapons:
    - match: ^(?i)(weapons?|attacks?)$
      comment: Attacks/weapons subsection
      captures:
        1: storage.type.nwod
      push:
        - meta_scope: meta.subsection.attacks.nwod
        - match: '{{start_indented_section}}'
          pop: true
        - match: ^(\s+)(\w.+?)(?= - )
          comment: Items like `pistol - stats - pools`
          captures:
            2: string.unquoted.weapon.nwod
          push:
            - meta_scope: meta.weapon.nwod
            - match: '{{end_indented_section}}'
              pop: true
            - match: ^\s+(\+)
              comment: Attachemnts and mods
              captures:
                1: keyword.operator.add-attachment.nwod
              push:
                - meta_scope: meta.weapon.attachment.nwod
                - match: $
                  pop: true
            - match: ^\s+(?!\+)
              comment: Weapon notes
              push:
                - meta_scope: comment.block.documentation.weapon.nwod
                - match: $
                  pop: true
            - match: (range)\s
              comment: Range designator
              captures:
                1: entity.other.attribute-name.nwod
              push:
                - meta_scope: meta.weapon.stats.range.nwod
                - match: (?=,|\s*\-|$)
                  pop: true
                - include: rangeValues
            - match: (mag)\s
              comment: Magazine capacity
              captures:
                1: entity.other.attribute-name.nwod
              push:
                - meta_scope: meta.weapon.stats.mag.nwod
                - match: (?=,|\s*\-|$)
                  pop: true
                - match: (\d+)(?:(\+)(\d))?
                  comment: Capacity descriptor
                  captures:
                    1: constant.numeric.mag.nwod
                    2: keyword.operator.nwod
                    3: constant.numeric.mag.chambered.nwod
            - match: (size)\s
              comment: Item size
              captures:
                1: entity.other.attribute-name.nwod
              push:
                - meta_scope: meta.weapon.stats.size.nwod
                - match: (?=,|\s*\-|$)
                  pop: true
                - include: sizeValues
                - include: parenComment
            - match: (atk)(?:\s+(\d+))?
              comment: Summed attack pool
              captures:
                1: entity.name.tag.nwod
                2: constant.numeric.atk.nwod
              push:
                - meta_scope: meta.weapon.stats.atk.nwod
                - match: (?=\s+\-\s+|\s*$)
                  pop: true
                - include: rollmod
                - include: rangeAtkPools
                - match: (aim)\s+(\+)(\d+)
                  comment: First round aim bonus
                  captures:
                    1: entity.other.attribute-name.nwod
                    2: keyword.operator.nwod
                    3: constant.numeric.aim.nwod
            - match: '\s(?:(dam(?:age)?)\s+)?(-)?(\d+)([lbaLBA])?'
              comment: Damage code like 3B or 4L
              scope: meta.damage.nwod
              captures:
                1: entity.other.attribute-name.nwod
                2: keyword.operator.nwod
                3: constant.numeric.nwod
                4: support.constant.character.damagetype.nwod
            - include: rollmod
