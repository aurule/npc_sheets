# [PackageDev] target_format: plist, ext: tmLanguage
---
name: NWoD Character Sheet
scopeName: text.plain.nwod
fileTypes: [nwod]
uuid: 7aa94fe0-ea77-4175-a58b-d903dbe28309

patterns:
- include: '#changeling-tags'
- include: '#general-tags'
- comment: 'Special --Stats-- section'
  name: 'meta.section.stats.nwod'
  begin: '^--(Stats)--$'
  beginCaptures:
    '1': {name: 'entity.name.section.nwod'}
  end: '(?=^--)'
  patterns:
  - include: '#derived'
  - include: '#weapons'
  - include: '#merits'
  - include: '#contracts'
  - include: '#pledges'
  - comment: 'Generic subsections with skills'
    name: 'meta.subsection.nwod'
    begin: '^(\w[\w ]+)$'
    beginCaptures:
      '1': {name: 'storage.type.nwod'}
    end: '^(?!(\s+|\s*$))'
    patterns:
    - include: '#skills'
- comment: 'Sections like --Notes-- and --Appearance--'
  name: 'meta.section.nwod'
  match: '^--(.+)--$'
  captures:
    '1': {name: 'entity.name.section.nwod'}
- include: 'text.html.markdown'

repository:
  derived:
    patterns:
    - comment: 'Derived attributes subsection'
      name: 'meta.subsection.derived.nwod'
      begin: '^(?i)(derived|advantages)$'
      beginCaptures:
        '1': {name: 'storage.type.nwod'}
      end: '^(?!(\s+|\s*$))'
      patterns:
      - comment: 'Armor stat'
        name: meta.variable.derived.armor.nwod
        begin: '(?i)\s+(armor)'
        beginCaptures:
          '1': {name: 'variable.other.armor.nwod'}
        end: '$'
        patterns:
        - comment: 'Armor rating'
          match: '(\d+)(?:(/)(\d+)(b)?)?'
          captures:
            '1': {name: 'constant.numeric.armor.nwod'}
            '2': {name: 'keyword.operator.nwod'}
            '3': {name: 'constant.numeric.armor.nwod'}
            '4': {name: 'support.constant.bulletproof.nwod'}
        - include: '#parenComment'
      - include: '#virtues'
      - include: '#vices'
      - comment: 'Seeming stat'
        name: 'meta.variable.derived.seeming.nwod'
        begin: '(?i)\s+(seeming)'
        beginCaptures:
          '1': {name: 'variable.other.seeming.nwod'}
        end: '\n'
        patterns:
        - include: '#seemings'
        - include: '#parenComment'
      - comment: 'Kith stat'
        name: 'meta.variable.derived.kith.nwod'
        begin: '(?i)\s+(kith)'
        beginCaptures:
          '1': {name: 'variable.other.kith.nwod'}
        end: '$'
        patterns:
        - include: '#kiths'
        - include: '#parenComment'
      - comment: 'Generic derived stat'
        name: meta.variable.derived.nwod
        begin: '\s+(\w+(?: \w+)*)\s+(?:([•|\d]+)|(\w+))'
        beginCaptures:
          '1': {name: 'variable.other.nwod'}
          '2': {name: 'constant.numeric.nwod'}
          '3': {name: 'constant.character.nwod'}
        end: '$'
        patterns:
        - include: '#parenComment'
  pledges:
    patterns:
    - comment: 'Pledges subsection'
      name: 'meta.subsection.pledges.nwod'
      begin: '^(?i)(pledges)$'
      beginCaptures:
        '1': {name: 'storage.type.nwod'}
      end: '^(?!(\s+|\s*$))'
      patterns:
      - comment: 'Pledges'
        begin: '^(\s+)(\w+(?: [\w/\-]+)*)'
        beginCaptures:
          '2': {name: 'entity.name.class.pledge.nwod'}
        end: '^(?!(\1\s+|\s*$))'
        name: 'meta.pledge.nwod'
  merits:
    patterns:
    - comment: 'Merits subsection'
      name: 'meta.subsection.merits.nwod'
      begin: '^(?i)(merits)$'
      beginCaptures:
        '1': {name: 'storage.type.nwod'}
      end: '^(?!(\s+|\s*$))'
      patterns:
      - comment: 'Merits'
        begin: '^(\s+)(?=\w)'
        end: '^(?!(\1\s+|\s*$))'
        name: 'meta.merit.nwod'
        patterns:
        - comment: 'Notes about usage, etc.'
          name: 'comment.block.documentation.merit.nwod'
          begin: '^\s+'
          end: '$'
        - comment: 'Refinement'
          match: '\(([\w\d\-/;, ]+)\)'
          captures:
            '1': {name: 'string.unquoted.merit.refine.nwod'}
        - comment: 'Name'
          match: '\w+(?: [\w\d\-\+]+)*'
          name: entity.other.inherited-class.merit.nwod
        - comment: 'Rating'
          match: '[•|\d]+'
          name: constant.numeric.nwod
        - comment: 'Magical bonuses like `+ 2` and `+3`'
          match: '(\+)\s*(\d+)'
          captures:
            '1': {name: 'keyword.operator.arithmetic.nwod'}
            '2': {name: 'constant.numeric.nwod'}
  contracts:
    patterns:
    - comment: 'Contracts subsection'
      name: 'meta.subsection.contracts.nwod'
      begin: '^(?i)(contracts)$'
      beginCaptures:
        '1': {name: 'storage.type.nwod'}
      end: '^(?!(\s+|\s*$))'
      patterns:
      - comment: 'Contracts'
        begin: '^(\s+)(?=\w)'
        end: '^(?!(\1\s+|\s*$))'
        name: 'meta.contract.nwod'
        patterns:
        - comment: 'Notes about usage, etc.'
          name: 'comment.block.documentation.contract.nwod'
          begin: '^\s+'
          end: '$'
        - comment: 'Refinement'
          match: '\(([\w\d\-/;, ]+)\)'
          captures:
            '1': {name: 'string.unquoted.contract.refine.nwod'}
        - comment: 'Name'
          match: '\w+(?: [\w\d\-\+]+)*'
          name: support.class.contract.nwod
        - comment: 'Rating'
          match: '[•|\d]+'
          name: constant.numeric.nwod
  skills:
    patterns:
    - comment: 'Skills and skill-like lines (attributes, power names, etc.)'
      name: 'meta.variable.nwod'
      begin: '\s+(\w+(?: [\w\(\)\d]+)*)\s+([•|\d]+)'
      beginCaptures:
        '1': {name: 'variable.other.nwod'}
        '2': {name: 'constant.numeric.nwod'}
      end: '$'
      patterns:
      - comment: 'Magical bonuses like `+ 2` and `+3`'
        match: '(\+)\s*(\d+)'
        name: 'meta.variable.nwod'
        captures:
          '1': {name: 'keyword.operator.arithmetic.nwod'}
          '2': {name: 'constant.numeric.nwod'}
      - comment: 'Skill specialties like `(crime scenes)`'
        name: 'meta.skill.specialty.nwod'
        begin: '(\()'
        beginCaptures:
          '1': {name: 'punctuation.definition.parameters.specialty.begin.nwod'}
        end: '(\))'
        endCaptures:
          '1': {name: 'punctuation.definition.parameters.specialty.end.nwod'}
        patterns:
        - comment: 'Individual skill specialties are a comma-separated list'
          match: '([\s\w]+)(,)?'
          captures:
            '1': {name: 'entity.other.attribute-name.specialty.nwod'}
            '2': {name: 'punctuation.separator.sequence.specialty.nwod'}
      - include: '#rollmod'
  weapons:
    patterns:
    - comment: 'Attacks/weapons subsection'
      name: 'meta.subsection.attacks.nwod'
      begin: '^(?i)(weapons?|attacks?)$'
      beginCaptures:
        '1': {name: 'storage.type.nwod'}
      end: '^(?!(\s+|\s*$))'
      patterns:
      - comment: 'Items like `pistol - stats - pools`'
        begin: '^(\s+)(\w.+?)(?= - )'
        end: '^(?!(\1\s+|\s*$))'
        name: 'meta.weapon.nwod'
        beginCaptures:
          '2': {name: 'string.unquoted.weapon.nwod'}
        patterns:
        - comment: 'Attachemnts and mods'
          name: 'meta.weapon.attachment.nwod'
          begin: '^\s+(\+)'
          beginCaptures:
            '1': {name: 'keyword.operator.add-attachment.nwod'}
          end: '$'
        - comment: 'Weapon notes'
          name: 'comment.block.documentation.weapon.nwod'
          begin: '^\s+(?!\+)'
          end: '$'
        - comment: 'Range designator'
          name: 'meta.weapon.stats.range.nwod'
          begin: '(range)\s'
          beginCaptures:
            '1': {name: 'entity.other.attribute-name.nwod'}
          end: '(?=,|\s*\-|$)'
          patterns:
          - include: '#rangeValues'
        - comment: 'Magazine capacity'
          name: 'meta.weapon.stats.mag.nwod'
          begin: '(mag)\s'
          beginCaptures:
            '1': {name: 'entity.other.attribute-name.nwod'}
          end: '(?=,|\s*\-|$)'
          patterns:
          - comment: 'Capacity descriptor'
            match: '(\d+)(?:(\+)(\d))?'
            captures:
              '1': {name: 'constant.numeric.mag.nwod'}
              '2': {name: 'keyword.operator.nwod'}
              '3': {name: 'constant.numeric.mag.chambered.nwod'}
        - comment: 'Item size'
          name: 'meta.weapon.stats.size.nwod'
          begin: '(size)\s'
          beginCaptures:
            '1': {name: 'entity.other.attribute-name.nwod'}
          end: '(?=,|\s*\-|$)'
          patterns:
          - include: '#sizeValues'
          - include: '#parenComment'
        - comment: 'Summed attack pool'
          name: 'meta.weapon.stats.atk.nwod'
          begin: '(atk)(?:\s+(\d+))?'
          beginCaptures:
            '1': {name: 'entity.name.tag.nwod'}
            '2': {name: 'constant.numeric.atk.nwod'}
          end: '(?=\s+\-\s+|\s*$)'
          patterns:
          - include: '#rollmod'
          - include: '#rangeAtkPools'
          - comment: 'First round aim bonus'
            match: '(aim)\s+(\+)(\d+)'
            captures:
              '1': {name: 'entity.other.attribute-name.nwod'}
              '2': {name: 'keyword.operator.nwod'}
              '3': {name: 'constant.numeric.aim.nwod'}
        - comment: 'Damage code like 3B or 4L'
          name: 'meta.damage.nwod'
          match: '\s(?:(dam(?:age)?)\s+)?(-)?(\d+)([lbaLBA])?'
          captures:
            '1': {name: 'entity.other.attribute-name.nwod'}
            '2': {name: 'keyword.operator.nwod'}
            '3': {name: 'constant.numeric.nwod'}
            '4': {name: 'support.constant.character.damagetype.nwod'}
        - include: '#rollmod'
  rollmod:
    patterns:
    - comment: 'Roll modifiers like `[8-again]`'
      name: meta.roll.parameters.nwod
      begin: '\['
      end: '\]'
      patterns:
      - comment: 'General modifiers'
        match: '\b(?:((?:10-again|9-again|8-again|rote)\??)|([\w\d+_\-\/]*))\s*(?:([,\s])|(?=[\n\]]))'
        captures:
          '1': {name: 'variable.parameter.function.language.nwod'}
          '2': {name: 'variable.parameter.function.nwod'}
          '3': {name: 'punctuation.separator.parameters.nwod'}
  sizeValues:
    patterns:
    - comment: 'Size listings like 1/S and 2/J'
      name: 'meta.variable.size.nwod'
      match: '(\d+)(?:(/)([psjlnPSJLN]))?'
      captures:
        '1': {name: 'constant.numeric.size.nwod'}
        '2': {name: 'keyword.operator.nwod'}
        '3': {name: 'support.constant.character.concealment.nwod'}
  rangeValues:
    patterns:
    - comment: 'Range increment bounds like 20/40/80'
      name: 'meta.variable.rangevalues.nwod'
      begin: '(?=\d|s)'
      end: '(?=[^/\dsml])'
      patterns:
      - comment: 'Range number'
        match: '\d'
        name: 'constant.numeric.range.nwod'
      - include: '#rangePlaceholder'
  rangeAtkPools:
    patterns:
    - comment: 'Ranged attack listings like 10/8/6'
      name: 'meta.variable.rangeatkpools.nwod'
      begin: '(?=\-|\d|s)'
      end: '(?=[^/\dsml\-])'
      patterns:
      - comment: 'Ranged attack'
        match: '\d'
        name: 'constant.numeric.rangeatk.nwod'
      - comment: 'Negative'
        match: '-'
        name: 'keyword.operator.nwod'
      - include: '#rangePlaceholder'
  rangePlaceholder:
    patterns:
    - comment: 'Range placeholder'
      match: '[sml]'
      name: 'support.constant.character.range.nwod'
  parenComment:
    patterns:
    - comment: 'Comments'
      name: 'comment.line.parenthesis.nwod'
      begin: '\('
      end: '\)'
      patterns:
      - include: '#parenComment'
  virtues:
    patterns:
    - comment: 'Virtue stat'
      name: 'meta.variable.derived.virtue.nwod'
      begin: '(?i)\s+(virtue)'
      beginCaptures:
        '1': {name: 'variable.other.virtue.nwod'}
      end: '$'
      patterns:
      - comment: 'Virtue keyword'
        match: |-
          (?ix) \b(
            Charity | Faith | Fortitude | Hope | Justice | Prudence | Temperance
          )\b
        name: 'support.constant.virtue.nwod'
  vices:
    patterns:
    - comment: 'Vice stat'
      name: 'meta.variable.derived.vice.nwod'
      begin: '(?i)\s+(vice)'
      beginCaptures:
        '1': {name: 'variable.other.vice.nwod'}
      end: '$'
      patterns:
      - comment: 'Vice keyword'
        match: |-
          (?ix) \b(
            Envy | Gluttony | Greed | Lust | Pride | Sloth | Wrath
          )\b
        name: 'support.constant.vice.nwod'
  seemings:
    patterns:
    - comment: 'Seeming keyword'
      match: |-
        (?ix) \b(
          Beast | Darkling | Elemental | Fairest | Ogre | Wizened
        )\b
      name: 'support.constant.seeming.nwod'
  kiths:
    patterns:
    - comment: 'Kith keyword'
      match: |-
        (?ix) \b(
          Broadback | Hunterheart | Runnerswift | Skitterskulk |
          Steepscrambler | Swimmerskin | Venombite | Windwing | Cleareyes |
          Coldscale | Roteater | Truefriend | Chimera | Coyote | Nix |
          Riddleseeker |
          Antiquarian | Gravewight | Leechfinger | Mirrorskin | Tunnelgrub |
          Lurkglider | Moonborn | Nightsinger | Palewraith | Razorhand |
          Whisperwisp | Illes | Pishacha | Skogsra |
          Airtouched | Earthbones | Fireheart | Manikin | Snowskin | Waterborn |
          Woodblood | Blightbent | Levinquick | Metalflesh | Sandharrowed |
          Apsaras | Ask-wee-da-eed | Di-cang |
          Bright\ One | Dancer | Draconic | Flowering | Muse | Flamesiren |
          Polychromatic | Shadowsoul | Telluric | Treasured | Gandharva |
          Succubus | Weisse Frau | Minstrel | Romancer | Larcenist | Playmate |
          Cyclopean | Farwalker | Gargantuan | Gristlegrinder | Stonebones |
          Waterdweller | Bloodbrute | Corpsegrinder | Render | Witchtooth |
          Daitya | Oni | Troll |
          Artist | Brewer | Chatelaine | Chirurgeon | Oracle | Smith | Soldier |
          Woodwalker | Author | Drudge | Gameplayer | Miner | Gremlin |
          Pamarindo | Thusser | Fatemaker
        )\b
      name: 'support.constant.kith.nwod'
  general-tags:
    patterns:
    - comment: 'Tags'
      begin: '^(?=@)'
      end: '$'
      name: 'meta.tag.nwod'
      patterns:
      - comment: 'Tags with required data'
        match: |-
          ^(@(?ix) \b(?:
            type | faketype | name | realname | group | rank | appearance | dead |
            court | motley | mask | mien
          )\b)(?:\s+(.+))?
        captures:
          '1': {name: 'entity.name.tag.nwod'}
          '2': {name: 'meta.variable.tag.nwod'}
      - comment: 'Foreign tag'
        match: ^(@foreign)(?:\s+(.+))?
        captures:
          '1': {name: 'entity.name.tag.nwod'}
          '2': {name: 'meta.variable.tag.foreign.nwod'}
      - comment: 'Directives'
        match: |-
          ^@(?ix) \b(
            skip
          )\b
        name: 'support.function.skip.nwod'
      - comment: 'Unrecognized tags'
        match: '^@\w+'
        name: 'string.unquoted.nwod'
  changeling-tags:
    patterns:
    - comment: 'Compound changeling tag'
      begin: '^(@changeling)\s*'
      beginCaptures:
        '1': {name: 'entity.name.tag.changeling.nwod'}
      end: '\n'
      name: 'meta.tag.changeling.nwod'
      contentName: 'meta.variable.tag.changeling.nwod'
      patterns:
      - comment: 'Seeming field'
        begin: '(?<=changeling\s)'
        end: '(?=\s)|$'
        name: 'meta.tag.seeming.nwod'
        patterns:
        - include: '#seemings'
      - comment: 'Kith field'
        begin: '\s+'
        end: '$'
        name: 'meta.tag.kith.nwod'
        patterns:
        - include: '#kiths'
    - comment: 'Seeming tag'
      begin: '^(@seeming)\s*'
      beginCaptures:
        '1': {name: 'entity.name.tag.seeming.nwod'}
      end: '\n'
      name: 'meta.tag.seeming.nwod'
      contentName: 'meta.variable.tag.seeming.nwod'
      patterns:
      - include: '#seemings'
    - comment: 'Kith tag'
      begin: '^(@kith)\s*'
      beginCaptures:
        '1': {name: 'entity.name.tag.kith.nwod'}
      end: '\n'
      name: 'meta.tag.kith.nwod'
      contentName: 'meta.variable.tag.kith.nwod'
      patterns:
      - include: '#kiths'
...
